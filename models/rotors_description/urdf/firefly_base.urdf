<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from /home/paul/rosdesk_acados_ws/dev/PX4-SITL_gazebo/models/rotors_description/urdf/firefly_base.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<!--
  -   Copyright (c) 2015-2020 PX4 Development Team. All rights reserved.
  -
  - Redistribution and use in source and binary forms, with or without
  - modification, are permitted provided that the following conditions
  - are met:
  -
  - 1. Redistributions of source code must retain the above copyright
  -    notice, this list of conditions and the following disclaimer.
  - 2. Redistributions in binary form must reproduce the above copyright
  -    notice, this list of conditions and the following disclaimer in
  -    the documentation and/or other materials provided with the
  -    distribution.
  - 3. Neither the name PX4 nor the names of its contributors may be
  -    used to endorse or promote products derived from this software
  -    without specific prior written permission.
  -
  - THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  - "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  - LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  - FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  - COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  - INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  - BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
  - OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
  - AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  - LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  - ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  - POSSIBILITY OF SUCH DAMAGE.
  -
  -->
<robot name="iris" xmlns:xacro="http://ros.org/wiki/xacro">
  <!-- Properties that can be assigned at build time as arguments.
  Is there a reason not to make all properties arguments?
  -->
  <!-- The following causes segfault with multiple vehicles if defaults to true!!! -->
  <!-- macros for gazebo plugins, sensors -->
  <!-- Macro to a add a GPS sensor. -->
  <!-- Macro to add logging to a bag file. -->
  <!-- Macro to add a camera. -->
  <!-- Macro to add the airspeed sensor_plugin. -->
  <!-- Macro to add the controller interface. -->
  <!-- Macro to add the groundtruth_plugin. -->
  <!-- Macro to add the magnetometer_plugin. -->
  <!-- Macro to add the barometer_plugin. -->
  <!-- Macro to add the mavlink interface. -->
  <!-- Macro to add the mavlink interface for a fixed-wing model. -->
  <!-- Macro to add the mavlink interface for a fixed-wing model. -->
  <!-- Macro to add an IMU. -->
  <!-- Macro to add a generic odometry sensor. -->
  <!-- Macro to add the wind plugin. -->
  <!-- VI sensor macros -->
  <!-- Macro to add a VI-sensor camera. -->
  <!-- Macro to add a depth camera on the VI-sensor. -->
  <!-- VI-Sensor Macro -->
  <!-- Instantiate iris "mechanics" -->
  <!-- Properties -->
  <!-- [kg] -->
  <!-- [m] -->
  <!-- [m] -->
  <!-- [kg] -->
  <!-- [m] -->
  <!-- [m] -->
  <!-- [m] -->
  <!-- [kg.m/s^2] -->
  <!-- [m] -->
  <!-- [s] -->
  <!-- [s] -->
  <!-- [rad/s] -->
  <!-- Property Blocks -->
  <!-- inertia of a single rotor, assuming it is a cuboid. Height=3mm, width=15mm -->
  <!-- Included URDF Files -->
  <!-- Main multirotor link -->
  <!-- Rotor joint and link -->
  <!-- Instantiate multirotor_base_macro once -->
  <link name="base_link"/>
  <joint name="base_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="base_link"/>
    <child link="base_link_inertia"/>
  </joint>
  <link name="base_link_inertia">
    <inertial>
      <mass value="1.5"/>
      <!-- [kg] -->
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0347563" ixy="0.0" ixz="0.0" iyy="0.0458929" iyz="0.0" izz="0.0977"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rotors_description/meshes/firefly.dae" scale="1 1 1"/>
        <!-- <box size="${body_width} ${body_width} ${body_height}"/> -->
        <!-- [m] [m] [m] -->
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.1 0.1 0.16"/>
        <!-- [m] [m] [m] -->
      </geometry>
    </collision>
  </link>
  <!-- attach multirotor_base_plugin to the base_link -->
  <gazebo>
    <plugin filename="libgazebo_multirotor_base_plugin.so" name="rosbag">
      <robotNamespace></robotNamespace>
      <linkName>base_link</linkName>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
  </gazebo>
  <gazebo reference="base_link">
    <material>Gazebo/DarkGrey</material>
    <collision name="base_link_inertia_collision">
      <surface>
        <contact>
          <ode>
            <min_depth>0.001</min_depth>
            <max_vel>0.0</max_vel>
          </ode>
        </contact>
        <friction>
          <ode/>
        </friction>
      </surface>
    </collision>
  </gazebo>
  <!-- Instantiate rotors -->
  <joint name="rotor_0_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.18619546181355998 0.1075 0.037"/>
    <axis xyz="0 0 1"/>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
    <parent link="base_link"/>
    <child link="rotor_0"/>
  </joint>
  <!-- TODO(ff): not currently set because it's not yet supported -->
  <!-- <gazebo reference="rotor_${motor_number}_joint"> <axis> <xyz>0 0 1</xyz>
      <limit> <velocity> ${max_rot_velocity} </velocity> </limit> </axis> </gazebo> -->
  <link name="rotor_0">
    <inertial>
      <mass value="0.005"/>
      <!-- [kg] -->
      <inertia ixx="9.75e-07" ixy="0.0" ixz="0.0" iyy="0.00016670416666666668" iyz="0.0" izz="0.0001676041666666667"/>
    </inertial>
    <visual>
      <geometry>
        <!-- <cylinder length="0.005" radius="${radius_rotor}"/> -->
        <!-- [m] -->
        <!-- <mesh filename="package://rotors_description/meshes/propeller_${direction}.dae" -->
        <mesh filename="package://rotors_description/meshes/iris_prop_ccw.dae" scale="1 1 1"/>
        <!-- <box size="${2*radius_rotor} 0.01 0.005"/> -->
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.005" radius="0.1"/>
        <!-- [m] -->
      </geometry>
    </collision>
  </link>
  <gazebo>
    <plugin filename="libgazebo_motor_model.so" name="front_left_motor_model">
      <robotNamespace></robotNamespace>
      <jointName>rotor_0_joint</jointName>
      <linkName>rotor_0</linkName>
      <turningDirection>ccw</turningDirection>
      <timeConstantUp>0.0125</timeConstantUp>
      <timeConstantDown>0.025</timeConstantDown>
      <maxRotVelocity>838</maxRotVelocity>
      <motorConstant>8.54858e-06</motorConstant>
      <momentConstant>0.016</momentConstant>
      <commandSubTopic>/gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>0</motorNumber>
      <rotorDragCoefficient>8.06428e-05</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
      <motorSpeedPubTopic>/motor_speed/0</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
      <!--
        <gazebo_joint_control_pid>
          <p>0.1</p>
          <i>0</i>
          <d>0</d>
          <iMax>0</iMax>
          <iMin>0</iMin>
          <cmdMax>3</cmdMax>
          <cmdMin>-3</cmdMin>
        </gazebo_joint_control_pid>
      -->
    </plugin>
  </gazebo>
  <gazebo reference="rotor_0">
    <material>Gazebo/Red</material>
  </gazebo>
  <joint name="rotor_1_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0 0.215 0.037"/>
    <axis xyz="0 0 1"/>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
    <parent link="base_link"/>
    <child link="rotor_1"/>
  </joint>
  <!-- TODO(ff): not currently set because it's not yet supported -->
  <!-- <gazebo reference="rotor_${motor_number}_joint"> <axis> <xyz>0 0 1</xyz>
      <limit> <velocity> ${max_rot_velocity} </velocity> </limit> </axis> </gazebo> -->
  <link name="rotor_1">
    <inertial>
      <mass value="0.005"/>
      <!-- [kg] -->
      <inertia ixx="9.75e-07" ixy="0.0" ixz="0.0" iyy="0.00016670416666666668" iyz="0.0" izz="0.0001676041666666667"/>
    </inertial>
    <visual>
      <geometry>
        <!-- <cylinder length="0.005" radius="${radius_rotor}"/> -->
        <!-- [m] -->
        <!-- <mesh filename="package://rotors_description/meshes/propeller_${direction}.dae" -->
        <mesh filename="package://rotors_description/meshes/iris_prop_cw.dae" scale="1 1 1"/>
        <!-- <box size="${2*radius_rotor} 0.01 0.005"/> -->
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.005" radius="0.1"/>
        <!-- [m] -->
      </geometry>
    </collision>
  </link>
  <gazebo>
    <plugin filename="libgazebo_motor_model.so" name="left_motor_model">
      <robotNamespace></robotNamespace>
      <jointName>rotor_1_joint</jointName>
      <linkName>rotor_1</linkName>
      <turningDirection>cw</turningDirection>
      <timeConstantUp>0.0125</timeConstantUp>
      <timeConstantDown>0.025</timeConstantDown>
      <maxRotVelocity>838</maxRotVelocity>
      <motorConstant>8.54858e-06</motorConstant>
      <momentConstant>0.016</momentConstant>
      <commandSubTopic>/gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>1</motorNumber>
      <rotorDragCoefficient>8.06428e-05</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
      <motorSpeedPubTopic>/motor_speed/1</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
      <!--
        <gazebo_joint_control_pid>
          <p>0.1</p>
          <i>0</i>
          <d>0</d>
          <iMax>0</iMax>
          <iMin>0</iMin>
          <cmdMax>3</cmdMax>
          <cmdMin>-3</cmdMin>
        </gazebo_joint_control_pid>
      -->
    </plugin>
  </gazebo>
  <gazebo reference="rotor_1">
    <material>Gazebo/Blue</material>
  </gazebo>
  <joint name="rotor_2_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.18619546181355998 0.1075 0.037"/>
    <axis xyz="0 0 1"/>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
    <parent link="base_link"/>
    <child link="rotor_2"/>
  </joint>
  <!-- TODO(ff): not currently set because it's not yet supported -->
  <!-- <gazebo reference="rotor_${motor_number}_joint"> <axis> <xyz>0 0 1</xyz>
      <limit> <velocity> ${max_rot_velocity} </velocity> </limit> </axis> </gazebo> -->
  <link name="rotor_2">
    <inertial>
      <mass value="0.005"/>
      <!-- [kg] -->
      <inertia ixx="9.75e-07" ixy="0.0" ixz="0.0" iyy="0.00016670416666666668" iyz="0.0" izz="0.0001676041666666667"/>
    </inertial>
    <visual>
      <geometry>
        <!-- <cylinder length="0.005" radius="${radius_rotor}"/> -->
        <!-- [m] -->
        <!-- <mesh filename="package://rotors_description/meshes/propeller_${direction}.dae" -->
        <mesh filename="package://rotors_description/meshes/iris_prop_ccw.dae" scale="1 1 1"/>
        <!-- <box size="${2*radius_rotor} 0.01 0.005"/> -->
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.005" radius="0.1"/>
        <!-- [m] -->
      </geometry>
    </collision>
  </link>
  <gazebo>
    <plugin filename="libgazebo_motor_model.so" name="back_left_motor_model">
      <robotNamespace></robotNamespace>
      <jointName>rotor_2_joint</jointName>
      <linkName>rotor_2</linkName>
      <turningDirection>ccw</turningDirection>
      <timeConstantUp>0.0125</timeConstantUp>
      <timeConstantDown>0.025</timeConstantDown>
      <maxRotVelocity>838</maxRotVelocity>
      <motorConstant>8.54858e-06</motorConstant>
      <momentConstant>0.016</momentConstant>
      <commandSubTopic>/gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>2</motorNumber>
      <rotorDragCoefficient>8.06428e-05</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
      <motorSpeedPubTopic>/motor_speed/2</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
      <!--
        <gazebo_joint_control_pid>
          <p>0.1</p>
          <i>0</i>
          <d>0</d>
          <iMax>0</iMax>
          <iMin>0</iMin>
          <cmdMax>3</cmdMax>
          <cmdMin>-3</cmdMin>
        </gazebo_joint_control_pid>
      -->
    </plugin>
  </gazebo>
  <gazebo reference="rotor_2">
    <material>Gazebo/Blue</material>
  </gazebo>
  <joint name="rotor_3_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.18619546181355998 -0.1075 0.037"/>
    <axis xyz="0 0 1"/>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
    <parent link="base_link"/>
    <child link="rotor_3"/>
  </joint>
  <!-- TODO(ff): not currently set because it's not yet supported -->
  <!-- <gazebo reference="rotor_${motor_number}_joint"> <axis> <xyz>0 0 1</xyz>
      <limit> <velocity> ${max_rot_velocity} </velocity> </limit> </axis> </gazebo> -->
  <link name="rotor_3">
    <inertial>
      <mass value="0.005"/>
      <!-- [kg] -->
      <inertia ixx="9.75e-07" ixy="0.0" ixz="0.0" iyy="0.00016670416666666668" iyz="0.0" izz="0.0001676041666666667"/>
    </inertial>
    <visual>
      <geometry>
        <!-- <cylinder length="0.005" radius="${radius_rotor}"/> -->
        <!-- [m] -->
        <!-- <mesh filename="package://rotors_description/meshes/propeller_${direction}.dae" -->
        <mesh filename="package://rotors_description/meshes/iris_prop_cw.dae" scale="1 1 1"/>
        <!-- <box size="${2*radius_rotor} 0.01 0.005"/> -->
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.005" radius="0.1"/>
        <!-- [m] -->
      </geometry>
    </collision>
  </link>
  <gazebo>
    <plugin filename="libgazebo_motor_model.so" name="back_right_motor_model">
      <robotNamespace></robotNamespace>
      <jointName>rotor_3_joint</jointName>
      <linkName>rotor_3</linkName>
      <turningDirection>cw</turningDirection>
      <timeConstantUp>0.0125</timeConstantUp>
      <timeConstantDown>0.025</timeConstantDown>
      <maxRotVelocity>838</maxRotVelocity>
      <motorConstant>8.54858e-06</motorConstant>
      <momentConstant>0.016</momentConstant>
      <commandSubTopic>/gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>3</motorNumber>
      <rotorDragCoefficient>8.06428e-05</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
      <motorSpeedPubTopic>/motor_speed/3</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
      <!--
        <gazebo_joint_control_pid>
          <p>0.1</p>
          <i>0</i>
          <d>0</d>
          <iMax>0</iMax>
          <iMin>0</iMin>
          <cmdMax>3</cmdMax>
          <cmdMin>-3</cmdMin>
        </gazebo_joint_control_pid>
      -->
    </plugin>
  </gazebo>
  <gazebo reference="rotor_3">
    <material>Gazebo/Blue</material>
  </gazebo>
  <joint name="rotor_4_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0 -0.215 0.037"/>
    <axis xyz="0 0 1"/>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
    <parent link="base_link"/>
    <child link="rotor_4"/>
  </joint>
  <!-- TODO(ff): not currently set because it's not yet supported -->
  <!-- <gazebo reference="rotor_${motor_number}_joint"> <axis> <xyz>0 0 1</xyz>
      <limit> <velocity> ${max_rot_velocity} </velocity> </limit> </axis> </gazebo> -->
  <link name="rotor_4">
    <inertial>
      <mass value="0.005"/>
      <!-- [kg] -->
      <inertia ixx="9.75e-07" ixy="0.0" ixz="0.0" iyy="0.00016670416666666668" iyz="0.0" izz="0.0001676041666666667"/>
    </inertial>
    <visual>
      <geometry>
        <!-- <cylinder length="0.005" radius="${radius_rotor}"/> -->
        <!-- [m] -->
        <!-- <mesh filename="package://rotors_description/meshes/propeller_${direction}.dae" -->
        <mesh filename="package://rotors_description/meshes/iris_prop_ccw.dae" scale="1 1 1"/>
        <!-- <box size="${2*radius_rotor} 0.01 0.005"/> -->
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.005" radius="0.1"/>
        <!-- [m] -->
      </geometry>
    </collision>
  </link>
  <gazebo>
    <plugin filename="libgazebo_motor_model.so" name="right_motor_model">
      <robotNamespace></robotNamespace>
      <jointName>rotor_4_joint</jointName>
      <linkName>rotor_4</linkName>
      <turningDirection>ccw</turningDirection>
      <timeConstantUp>0.0125</timeConstantUp>
      <timeConstantDown>0.025</timeConstantDown>
      <maxRotVelocity>838</maxRotVelocity>
      <motorConstant>8.54858e-06</motorConstant>
      <momentConstant>0.016</momentConstant>
      <commandSubTopic>/gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>4</motorNumber>
      <rotorDragCoefficient>8.06428e-05</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
      <motorSpeedPubTopic>/motor_speed/4</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
      <!--
        <gazebo_joint_control_pid>
          <p>0.1</p>
          <i>0</i>
          <d>0</d>
          <iMax>0</iMax>
          <iMin>0</iMin>
          <cmdMax>3</cmdMax>
          <cmdMin>-3</cmdMin>
        </gazebo_joint_control_pid>
      -->
    </plugin>
  </gazebo>
  <gazebo reference="rotor_4">
    <material>Gazebo/Blue</material>
  </gazebo>
  <joint name="rotor_5_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.18619546181355998 -0.1075 0.037"/>
    <axis xyz="0 0 1"/>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
    <parent link="base_link"/>
    <child link="rotor_5"/>
  </joint>
  <!-- TODO(ff): not currently set because it's not yet supported -->
  <!-- <gazebo reference="rotor_${motor_number}_joint"> <axis> <xyz>0 0 1</xyz>
      <limit> <velocity> ${max_rot_velocity} </velocity> </limit> </axis> </gazebo> -->
  <link name="rotor_5">
    <inertial>
      <mass value="0.005"/>
      <!-- [kg] -->
      <inertia ixx="9.75e-07" ixy="0.0" ixz="0.0" iyy="0.00016670416666666668" iyz="0.0" izz="0.0001676041666666667"/>
    </inertial>
    <visual>
      <geometry>
        <!-- <cylinder length="0.005" radius="${radius_rotor}"/> -->
        <!-- [m] -->
        <!-- <mesh filename="package://rotors_description/meshes/propeller_${direction}.dae" -->
        <mesh filename="package://rotors_description/meshes/iris_prop_cw.dae" scale="1 1 1"/>
        <!-- <box size="${2*radius_rotor} 0.01 0.005"/> -->
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.005" radius="0.1"/>
        <!-- [m] -->
      </geometry>
    </collision>
  </link>
  <gazebo>
    <plugin filename="libgazebo_motor_model.so" name="front_right_motor_model">
      <robotNamespace></robotNamespace>
      <jointName>rotor_5_joint</jointName>
      <linkName>rotor_5</linkName>
      <turningDirection>cw</turningDirection>
      <timeConstantUp>0.0125</timeConstantUp>
      <timeConstantDown>0.025</timeConstantDown>
      <maxRotVelocity>838</maxRotVelocity>
      <motorConstant>8.54858e-06</motorConstant>
      <momentConstant>0.016</momentConstant>
      <commandSubTopic>/gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>5</motorNumber>
      <rotorDragCoefficient>8.06428e-05</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
      <motorSpeedPubTopic>/motor_speed/5</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
      <!--
        <gazebo_joint_control_pid>
          <p>0.1</p>
          <i>0</i>
          <d>0</d>
          <iMax>0</iMax>
          <iMin>0</iMin>
          <cmdMax>3</cmdMax>
          <cmdMin>-3</cmdMin>
        </gazebo_joint_control_pid>
      -->
    </plugin>
  </gazebo>
  <gazebo reference="rotor_5">
    <material>Gazebo/Red</material>
  </gazebo>
  <!-- Mount a GPS module. -->
  <gazebo>
    <model name="gps0">
      <link name="link">
        <pose>0.0 0.0 0.0 0 0 0</pose>
        <inertial>
          <pose>0 0 0 0 0 0</pose>
          <mass>0.01</mass>
          <inertia>
            <ixx>2.1733e-6</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>2.1733e-6</iyy>
            <iyz>0</iyz>
            <izz>1.8e-7</izz>
          </inertia>
        </inertial>
        <visual name="visual">
          <geometry>
            <cylinder>
              <radius>0.01</radius>
              <length>0.002</length>
            </cylinder>
          </geometry>
          <material>
            <script>
              <name>Gazebo/Black</name>
            </script>
          </material>
        </visual>
        <sensor name="gps" type="gps">
          <pose>0 0 0 0 0 0</pose>
          <plugin filename="libgazebo_gps_plugin.so" name="gps_plugin">
            <robotNamespace></robotNamespace>
            <gpsNoise>true</gpsNoise>
            <gpsXYRandomWalk>2.0</gpsXYRandomWalk>
            <gpsZRandomWalk>4.0</gpsZRandomWalk>
            <gpsXYNoiseDensity>0.0002</gpsXYNoiseDensity>
            <gpsZNoiseDensity>0.0004</gpsZNoiseDensity>
            <gpsVXYNoiseDensity>0.2</gpsVXYNoiseDensity>
            <gpsVZNoiseDensity>0.4</gpsVZNoiseDensity>
          </plugin>
        </sensor>
      </link>
    </model>
    <joint name="gps0_joint" type="fixed">
      <parent>base_link</parent>
      <child>gps0::link</child>
    </joint>
  </gazebo>
  <!-- Instantiate groundtruth plugin. -->
  <gazebo>
    <plugin filename="libgazebo_groundtruth_plugin.so" name="groundtruth_plugin">
      <robotNamespace></robotNamespace>
    </plugin>
  </gazebo>
  <!-- Instantiate magnetometer plugin. -->
  <gazebo>
    <plugin filename="libgazebo_magnetometer_plugin.so" name="magnetometer_plugin">
      <robotNamespace></robotNamespace>
      <pubRate>100</pubRate>
      <noiseDensity>0.0004</noiseDensity>
      <randomWalk>6.4e-06</randomWalk>
      <biasCorrelationTime>600</biasCorrelationTime>
      <magTopic>/mag</magTopic>
    </plugin>
  </gazebo>
  <!-- Instantiate barometer plugin. -->
  <gazebo>
    <plugin filename="libgazebo_barometer_plugin.so" name="barometer_plugin">
      <robotNamespace></robotNamespace>
      <pubRate>50</pubRate>
      <baroTopic>/baro</baroTopic>
      <baroDriftPaPerSec>0</baroDriftPaPerSec>
    </plugin>
  </gazebo>
  <!-- Instantiate mavlink telemetry interface. -->
  <gazebo>
    <plugin filename="libgazebo_mavlink_interface.so" name="mavlink_interface">
      <robotNamespace></robotNamespace>
      <imuSubTopic>/imu</imuSubTopic>
      <magSubTopic>/mag</magSubTopic>
      <baroSubTopic>/baro</baroSubTopic>
      <mavlink_addr>INADDR_ANY</mavlink_addr>
      <mavlink_udp_port>14560</mavlink_udp_port>
      <mavlink_tcp_port>4560</mavlink_tcp_port>
      <serialEnabled>false</serialEnabled>
      <serialDevice>/dev/ttyACM0</serialDevice>
      <baudRate>921600</baudRate>
      <qgc_addr>INADDR_ANY</qgc_addr>
      <qgc_udp_port>14550</qgc_udp_port>
      <sdk_addr>INADDR_ANY</sdk_addr>
      <sdk_udp_port>14540</sdk_udp_port>
      <hil_mode>false</hil_mode>
      <hil_state_level>false</hil_state_level>
      <vehicle_is_tailsitter>false</vehicle_is_tailsitter>
      <send_vision_estimation>0</send_vision_estimation>
      <send_odometry>1</send_odometry>
      <enable_lockstep>true</enable_lockstep>
      <use_tcp>true</use_tcp>
      <motorSpeedCommandPubTopic>/gazebo/command/motor_speed</motorSpeedCommandPubTopic>
      <control_channels>
        <channel name="rotor1">
          <input_index>0</input_index>
          <input_offset>0</input_offset>
          <input_scaling>1000</input_scaling>
          <zero_position_disarmed>0</zero_position_disarmed>
          <zero_position_armed>100</zero_position_armed>
          <joint_control_type>velocity</joint_control_type>
        </channel>
        <channel name="rotor2">
          <input_index>1</input_index>
          <input_offset>0</input_offset>
          <input_scaling>1000</input_scaling>
          <zero_position_disarmed>0</zero_position_disarmed>
          <zero_position_armed>100</zero_position_armed>
          <joint_control_type>velocity</joint_control_type>
        </channel>
        <channel name="rotor3">
          <input_index>2</input_index>
          <input_offset>0</input_offset>
          <input_scaling>1000</input_scaling>
          <zero_position_disarmed>0</zero_position_disarmed>
          <zero_position_armed>100</zero_position_armed>
          <joint_control_type>velocity</joint_control_type>
        </channel>
        <channel name="rotor4">
          <input_index>3</input_index>
          <input_offset>0</input_offset>
          <input_scaling>1000</input_scaling>
          <zero_position_disarmed>0</zero_position_disarmed>
          <zero_position_armed>100</zero_position_armed>
          <joint_control_type>velocity</joint_control_type>
        </channel>
        <channel name="rotor5">
          <input_index>4</input_index>
          <input_offset>1</input_offset>
          <input_scaling>324.6</input_scaling>
          <zero_position_disarmed>0</zero_position_disarmed>
          <zero_position_armed>0</zero_position_armed>
          <joint_control_type>velocity</joint_control_type>
          <joint_control_pid>
            <p>0.1</p>
            <i>0</i>
            <d>0</d>
            <iMax>0.0</iMax>
            <iMin>0.0</iMin>
            <cmdMax>2</cmdMax>
            <cmdMin>-2</cmdMin>
          </joint_control_pid>
          <joint_name>zephyr_delta_wing::propeller_joint</joint_name>
        </channel>
        <channel name="rotor6">
          <input_index>5</input_index>
          <input_offset>0</input_offset>
          <!-- joint limits [-0.524, 0.524] -->
          <input_scaling>0.524</input_scaling>
          <zero_position_disarmed>0</zero_position_disarmed>
          <zero_position_armed>0</zero_position_armed>
          <joint_control_type>position</joint_control_type>
          <joint_name>zephyr_delta_wing::flap_left_joint</joint_name>
          <joint_control_pid>
            <p>10.0</p>
            <i>0</i>
            <d>0</d>
            <iMax>0</iMax>
            <iMin>0</iMin>
            <cmdMax>20</cmdMax>
            <cmdMin>-20</cmdMin>
          </joint_control_pid>
        </channel>
        <channel name="rotor7">
          <input_index>6</input_index>
          <input_offset>0</input_offset>
          <!-- joint limits [-0.524, 0.524] -->
          <input_scaling>0.524</input_scaling>
          <zero_position_disarmed>0</zero_position_disarmed>
          <zero_position_armed>0</zero_position_armed>
          <joint_control_type>position</joint_control_type>
          <joint_name>zephyr_delta_wing::flap_right_joint</joint_name>
          <joint_control_pid>
            <p>10.0</p>
            <i>0</i>
            <d>0</d>
            <iMax>0</iMax>
            <iMin>0</iMin>
            <cmdMax>20</cmdMax>
            <cmdMin>-20</cmdMin>
          </joint_control_pid>
        </channel>
        <channel name="rotor8">
          <input_index>7</input_index>
          <input_offset>0</input_offset>
          <input_scaling>0.524</input_scaling>
          <zero_position_disarmed>0</zero_position_disarmed>
          <zero_position_armed>0</zero_position_armed>
          <joint_control_type>position</joint_control_type>
        </channel>
      </control_channels>
    </plugin>
  </gazebo>
  <!-- Mount an ADIS16448 IMU. -->
  <!-- IMU link -->
  <link name="/imu_link">
    <inertial>
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
      <mass value="0.015"/>
      <!-- [kg] -->
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </inertial>
  </link>
  <!-- IMU joint -->
  <joint name="/imu_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="base_link"/>
    <child link="/imu_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
  </joint>
  <gazebo>
    <plugin filename="libgazebo_imu_plugin.so" name="rotors_gazebo_imu_plugin">
      <!-- A good description of the IMU parameters can be found in the kalibr documentation:
           https://github.com/ethz-asl/kalibr/wiki/IMU-Noise-Model-and-Intrinsics -->
      <robotNamespace></robotNamespace>
      <!-- (string, required): ros namespace in which the messages are published -->
      <linkName>/imu_link</linkName>
      <!-- (string, required): name of the body which holds the IMU sensor -->
      <imuTopic>/imu</imuTopic>
      <!-- (string): name of the sensor output topic and prefix of service names (defaults to imu) -->
      <gyroscopeNoiseDensity>0.00018665</gyroscopeNoiseDensity>
      <!-- Gyroscope noise density (two-sided spectrum) [rad/s/sqrt(Hz)] -->
      <gyroscopeRandomWalk>3.8785e-05</gyroscopeRandomWalk>
      <!-- Gyroscope bias random walk [rad/s/s/sqrt(Hz)] -->
      <gyroscopeBiasCorrelationTime>1000.0</gyroscopeBiasCorrelationTime>
      <!-- Gyroscope bias correlation time constant [s] -->
      <gyroscopeTurnOnBiasSigma>0.0087</gyroscopeTurnOnBiasSigma>
      <!-- Gyroscope turn on bias standard deviation [rad/s] -->
      <accelerometerNoiseDensity>0.00186</accelerometerNoiseDensity>
      <!-- Accelerometer noise density (two-sided spectrum) [m/s^2/sqrt(Hz)] -->
      <accelerometerRandomWalk>0.006</accelerometerRandomWalk>
      <!-- Accelerometer bias random walk. [m/s^2/s/sqrt(Hz)] -->
      <accelerometerBiasCorrelationTime>300.0</accelerometerBiasCorrelationTime>
      <!-- Accelerometer bias correlation time constant [s] -->
      <accelerometerTurnOnBiasSigma>0.196</accelerometerTurnOnBiasSigma>
      <!-- Accelerometer turn on bias standard deviation [m/s^2] -->
    </plugin>
  </gazebo>
  <!-- Mount an IMU providing ground truth. -->
  <!-- IMU link -->
  <link name="/imugt_link">
    <inertial>
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
      <mass value="1e-05"/>
      <!-- [kg] -->
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </inertial>
  </link>
  <!-- IMU joint -->
  <joint name="/imugt_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="base_link"/>
    <child link="/imugt_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
  </joint>
  <gazebo>
    <plugin filename="libgazebo_imu_plugin.so" name="rotors_gazebo_imugt_plugin">
      <!-- A good description of the IMU parameters can be found in the kalibr documentation:
           https://github.com/ethz-asl/kalibr/wiki/IMU-Noise-Model-and-Intrinsics -->
      <robotNamespace></robotNamespace>
      <!-- (string, required): ros namespace in which the messages are published -->
      <linkName>/imugt_link</linkName>
      <!-- (string, required): name of the body which holds the IMU sensor -->
      <imuTopic>ground_truth/imu</imuTopic>
      <!-- (string): name of the sensor output topic and prefix of service names (defaults to imu) -->
      <gyroscopeNoiseDensity>0.0</gyroscopeNoiseDensity>
      <!-- Gyroscope noise density (two-sided spectrum) [rad/s/sqrt(Hz)] -->
      <gyroscopeRandomWalk>0.0</gyroscopeRandomWalk>
      <!-- Gyroscope bias random walk [rad/s/s/sqrt(Hz)] -->
      <gyroscopeBiasCorrelationTime>1000.0</gyroscopeBiasCorrelationTime>
      <!-- Gyroscope bias correlation time constant [s] -->
      <gyroscopeTurnOnBiasSigma>0.0</gyroscopeTurnOnBiasSigma>
      <!-- Gyroscope turn on bias standard deviation [rad/s] -->
      <accelerometerNoiseDensity>0.0</accelerometerNoiseDensity>
      <!-- Accelerometer noise density (two-sided spectrum) [m/s^2/sqrt(Hz)] -->
      <accelerometerRandomWalk>0.0</accelerometerRandomWalk>
      <!-- Accelerometer bias random walk. [m/s^2/s/sqrt(Hz)] -->
      <accelerometerBiasCorrelationTime>300.0</accelerometerBiasCorrelationTime>
      <!-- Accelerometer bias correlation time constant [s] -->
      <accelerometerTurnOnBiasSigma>0.0</accelerometerTurnOnBiasSigma>
      <!-- Accelerometer turn on bias standard deviation [m/s^2] -->
    </plugin>
  </gazebo>
  <!-- Mount a generic odometry sensor providing ground truth. -->
  <!-- odometry link -->
  <link name="/ground_truth/odometry_sensorgt_link">
    <inertial>
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
      <mass value="1e-05"/>
      <!-- [kg] -->
    </inertial>
  </link>
  <!-- odometry joint -->
  <joint name="/ground_truth/odometry_sensorgt_joint" type="revolute">
    <parent link="base_link"/>
    <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
    <child link="/ground_truth/odometry_sensorgt_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
  </joint>
  <gazebo>
    <plugin filename="librotors_gazebo_odometry_plugin.so" name="odometry_sensorgt">
      <linkName>/ground_truth/odometry_sensorgt_link</linkName>
      <robotNamespace>/ground_truth</robotNamespace>
      <poseTopic>pose</poseTopic>
      <poseWithCovarianceTopic>pose_with_covariance</poseWithCovarianceTopic>
      <positionTopic>position</positionTopic>
      <transformTopic>transform</transformTopic>
      <odometryTopic>odometry</odometryTopic>
      <parentFrameId>world</parentFrameId>
      <!-- Use the scoped link name here. e.g. Model::link. -->
      <measurementDivisor>1</measurementDivisor>
      <!-- only every (seq % measurementDivisor) == 0 measurement is published [int] -->
      <measurementDelay>0</measurementDelay>
      <!-- time that measurement gets held back before it's published in [simulation cycles (int)] -->
      <unknownDelay>0.0</unknownDelay>
      <!-- additional delay, that just gets added to the timestamp [s] -->
      <noiseNormalPosition>0 0 0</noiseNormalPosition>
      <!-- standard deviation of additive white gaussian noise [m] -->
      <noiseNormalQuaternion>0 0 0</noiseNormalQuaternion>
      <!-- standard deviation white gaussian noise [rad]: q_m = q*quaternionFromSmallAngleApproximation(noiseNormalQ) -->
      <noiseNormalLinearVelocity>0 0 0</noiseNormalLinearVelocity>
      <!-- standard deviation of additive white gaussian noise [m/s] -->
      <noiseNormalAngularVelocity>0 0 0</noiseNormalAngularVelocity>
      <!-- standard deviation of additive white gaussian noise [rad/s] -->
      <noiseUniformPosition>0 0 0</noiseUniformPosition>
      <!-- symmetric bounds of uniform noise [m] -->
      <noiseUniformQuaternion>0 0 0</noiseUniformQuaternion>
      <!-- symmetric bounds of uniform noise [rad], computation see above -->
      <noiseUniformLinearVelocity>0 0 0</noiseUniformLinearVelocity>
      <!-- symmetric bounds of uniform noise [m/s] -->
      <noiseUniformAngularVelocity>0 0 0</noiseUniformAngularVelocity>
      <!-- symmetric bounds of uniform noise [rad/s] -->
    </plugin>
  </gazebo>
</robot>
